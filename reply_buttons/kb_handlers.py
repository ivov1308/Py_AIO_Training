from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import (Message, ReplyKeyboardRemove)

from my_config import BOT_TOKEN
from reply_keyboards import *

bot = Bot(BOT_TOKEN)
dp = Dispatcher()


@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(
        text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±–æ–∑—Ä–µ–≤–∞—Ç–µ–ª—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä!\n\n'
             '/start - –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é\n'
             '/stop - —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É\n\n'
             '–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:\n'
             '1 - –í–æ–ø—Ä–æ—Å –ø—Ä–æ –∫–æ—à–µ–∫ (2 –∫–Ω–æ–ø–∫–∏)\n'
             '2 - –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 3—Ö3\n'
             '3 - –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–æ–º–±–∏–∫–æ–º (9 –∫–Ω–æ–ø–æ–∫)\n'
             '4 - –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 25—Ö12 (300 –∫–Ω–æ–ø–æ–∫ - max!)\n'
             '5 - kb_builder_1 (row4+row3)\n'
             '6 - kb_builder_2 (row4+add)\n'
             '7 - –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏',
        reply_markup=keyboard_start
    )


@dp.message(Command(commands='stop'))
async def process_start_command(message: Message):
    await message.answer(
        text='–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–∫—Ä—ã—Ç–∞',
        reply_markup=ReplyKeyboardRemove()
    )


@dp.message(F.text == '1')
async def process_keyboard_1(message: Message):
    await message.answer(
        text='–ß–µ–≥–æ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ?',
        reply_markup=keyboard_1
    )

@dp.message(F.text == '–°–æ–±–∞–∫ ü¶Æ')
async def process_dog_answer(message: Message):
    await message.answer(
        text='–î–∞, –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ, –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è —Å–æ–±–∞–∫. '
             '–ù–æ –≤—ã –≤–∏–¥–µ–ª–∏ –∫–∞–∫ –æ–Ω–∏ –±–æ—è—Ç—Å—è –æ–≥—É—Ä—Ü–æ–≤?'
    )

@dp.message(F.text == '–û–≥—É—Ä—Ü–æ–≤ ü•í')
async def process_cucumber_answer(message: Message):
    await message.answer(
        text='–î–∞, –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –æ–≥—É—Ä—Ü–æ–≤ '
             '–∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ'
    )


@dp.message(F.text == '2')
async def process_keyboard_2(message: Message):
    await message.answer(
        text='–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 3—Ö3',
        reply_markup=keyboard_2)


@dp.message(F.text == '3')
async def process_keyboard_3(message: Message):
    await message.answer(
        text='–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–æ–º–±–∏–∫–æ–º',
        reply_markup=keyboard_3
    )


@dp.message(F.text == '4')
async def process_keyboard_4(message: Message):
    await message.answer(
        text='–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 25—Ö12',
        reply_markup=keyboard_4
    )


@dp.message(F.text == '5')
async def process_keyboard_5(message: Message):
    await message.answer(
        text='kb_builder_1 (row4+row3)',
        reply_markup=keyboard_5
    )


@dp.message(F.text == '6')
async def process_keyboard_6(message: Message):
    await message.answer(
        text='kb_builder_2 (row4+add)',
        reply_markup=keyboard_6
    )


@dp.message(F.text == '7')
async def process_keyboard_7(message: Message):
    await message.answer(
        text='–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏',
        reply_markup=keyboard_7
    )


if __name__ == '__main__':
    dp.run_polling(bot)
